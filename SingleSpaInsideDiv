You need to manually mount @dsp/dsr-ui inside a div when clicking a menu item.


import React, { Component } from "react";
import { mount, unmount } from "single-spa";
import Navigationbar from "../components/Navbar/Navigationbar";

class Dashboard extends Component {
  constructor(props) {
    super(props);
    this.state = {
      activeApp: null, // Track the active micro frontend
    };
  }

  loadMicroFrontend = (appName) => {
    if (this.state.activeApp) {
      unmount(this.state.activeApp).then(() => {
        this.setState({ activeApp: appName }, () => mount(appName));
      });
    } else {
      this.setState({ activeApp: appName }, () => mount(appName));
    }
  };

  render() {
    const { activeApp } = this.state;

    return (
      <div>
        <Navigationbar />

        {/* Show dashboard content only if no micro frontend is active */}
        {!activeApp && (
          <div id="dashboard-contents">
            <h2>Dashboard</h2>
            <button onClick={() => this.loadMicroFrontend("@dsp/dsr-ui")}>
              Load DSR UI
            </button>
          </div>
        )}

        {/* Micro frontend will load inside this div */}
        <div id="micro-frontend-container"></div>
      </div>
    );
  }
}

export default Dashboard;

export default Dashboard;


import React, { useState } from "react";
import { mount, unmount } from "single-spa";
import Navigationbar from "../../components/Navbar/Navigationbar"; 

export default function Dashboard() {
  const [activeApp, setActiveApp] = useState(null);

  const loadMicroFrontend = (appName) => {
    if (activeApp) {
      unmount(activeApp); // Unmount previous app before mounting new one
    }
    setActiveApp(appName);
    mount(appName);
  };

  return (
    <div>
      <Navigationbar />

      <h2>Dashboard</h2>

      <button onClick={() => loadMicroFrontend("@dsp/dsr-ui")}>Load DSR UI</button>

      {/* Micro frontend will load inside this div */}
      <div id="micro-frontend-container"></div>
    </div>
  );
}



Updated root-config.js

import * as singleSpa from "single-spa";

singleSpa.registerApplication(
  "@dsp/root-component",
  () => System.import("@dsp/root-component"),
  (location) => location.pathname === "/"
);

singleSpa.registerApplication(
  "@dsp/dsr-ui",
  async () => {
    const app = await System.import("@dsp/dsr-ui");

    return {
      bootstrap: app.bootstrap,
      mount: async (props) => {
        await app.mount(props);
        document.getElementById("micro-frontend-container").appendChild(props.domElement);
      },
      unmount: async (props) => {
        await app.unmount(props);
        document.getElementById("micro-frontend-container").innerHTML = ""; // Clear container on unmount
      }
    };
  },
  () => false // Initially, don't auto-mount
);

singleSpa.start();


@dsp/dsr-ui/root.component.js

import React from "react";
import ReactDOM from "react-dom";
import singleSpaReact from "single-spa-react";
import DsrApp from "./DsrApp";

const reactLifecycles = singleSpaReact({
  React,
  ReactDOM,
  rootComponent: DsrApp,
  domElementGetter: () => document.getElementById("micro-frontend-container"), // Mount inside Dashboard.js div
});

export const { bootstrap, mount, unmount } = reactLifecycles;
