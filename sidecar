import jakarta.ws.rs.client.ClientRequestContext;
import jakarta.ws.rs.client.ClientRequestFilter;
import jakarta.ws.rs.ext.Provider;

@Provider
public class HttpsToHttpFilter implements ClientRequestFilter {

    @Override
    public void filter(ClientRequestContext requestContext) {
        String uri = requestContext.getUri().toString();
        if (uri.startsWith("https://")) {
            uri = uri.replaceFirst("https://", "http://");
            requestContext.setUri(java.net.URI.create(uri));
        }
    }
}


quarkus.rest-client."com.example.MyService".register-provider=com.example.HttpsToHttpFilter


package com.example;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.ws.rs.client.ClientRequestContext;
import jakarta.ws.rs.client.ClientRequestFilter;
import jakarta.ws.rs.ext.Provider;
import java.net.URI;
import io.quarkus.arc.profile.IfBuildProfile;

@Provider
@ApplicationScoped
@IfBuildProfile("dev")   // ⬅️  Only load this bean when profile = dev
public class DevProxyFilter implements ClientRequestFilter {

    @Override
    public void filter(ClientRequestContext requestContext) {
        URI original = requestContext.getUri();

        URI newUri = URI.create(
            "http://localhost:8457/dev-proxy" +
            original.getPath() +
            (original.getQuery() != null ? "?" + original.getQuery() : "")
        );

        requestContext.setUri(newUri);
    }
}



quarkus.rest-client."com.example.MyService".register-provider=com.example.DevProxyFilter

