<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Database Query Interface</title>
    <style>
        .text-warning {
            color: #ffc107;
            font-weight: bold;
        }
        .text-success {
            color: #28a745;
            font-weight: bold;
        }
        .text-danger {
            color: #dc3545;
            font-weight: bold;
        }
        .text-info {
            color: #17a2b8;
            font-weight: bold;
        }
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        h1 {
            text-align: center;
            color: #007bff;
        }
        textarea {
            width: 100%;
            font-size: 16px;
            font-family: monospace;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 18px;
            cursor: pointer;
            border-radius: 4px;
        }
        button:hover {
            background-color: #0056b3;
        }
        .table-container {
            overflow: auto;
            max-height: 400px;
            border: 1px solid #ccc;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ccc;
            text-align: center;
            padding: 10px;
            word-wrap: break-word;
            word-break: break-word;
        }
        th {
            background-color: #f4f4f4;
            font-weight: bold;
        }
        tr:nth-child(odd) {
            background-color: #f9f9f9;
        }
        tr:nth-child(even) {
            background-color: #ffffff;
        }
        #loader {
            display: none;
            text-align: center;
            margin: 20px 0;
        }
    </style>
    <script>
        function getSelectedText() {
            var textarea = document.querySelector('textarea');
            return textarea.value.substring(textarea.selectionStart, textarea.selectionEnd);
        }

        function executeHighlightedQuery(event) {
            event.preventDefault();
            var highlightedQuery = getSelectedText().trim();

            if (!highlightedQuery) {
                alert("Please highlight a query to execute.");
                return;
            }

            if ((/delete\s|update\s/i.test(highlightedQuery)) && !/where\s/i.test(highlightedQuery)) {
                alert("DELETE or UPDATE queries must include a WHERE clause to avoid unsafe operations.");
                return;
            }

            // Show loader
            document.getElementById('loader').style.display = 'block';

            // Hide results section while loading
            document.getElementById('queryResults').innerHTML = '';

            var formData = new FormData();
            formData.append('query', highlightedQuery);

            fetch('/execute-query', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                // Hide loader
                document.getElementById('loader').style.display = 'none';
                // Update results section
                document.getElementById('queryResults').innerHTML = data;
            })
            .catch(error => {
                // Hide loader
                document.getElementById('loader').style.display = 'none';
                alert("Error executing query.");
            });
        }
    </script>
</head>
<body>
    <div>
        <h1>PostgreSQL Query Interface</h1>

        <!-- Query Input Form -->
        <form onsubmit="executeHighlightedQuery(event)">
            <textarea name="query" rows="5" placeholder="Enter SQL Query (SELECT, INSERT, UPDATE, DELETE)" required></textarea><br><br>
            <button type="submit">Execute Selected Query</button>
        </form>

        <!-- Loader -->
        <div id="loader">
            <p>Loading, please wait...</p>
        </div>

        <hr>

        <!-- Display Query Results -->
        <div id="queryResults">
            <div th:if="${queryResult == null or #lists.isEmpty(queryResult)}">
                <p class="text-warning">Zero results found for the query.</p>
            </div>

            <div th:if="${queryResult != null and not #lists.isEmpty(queryResult)}">
                <h3 class="text-success">Query Results:</h3>
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th th:each="column : ${queryResult[0].keySet()}" th:text="${column}"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr th:each="row : ${queryResult}">
                                <td th:each="column : ${row.values()}" th:text="${column}"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div th:if="${affectedRows}">
                <h3 class="text-info">Execution Summary:</h3>
                <p th:text="'Rows affected: ' + ${affectedRows}"></p>
            </div>

            <div th:if="${error}" class="text-danger">
                <h3>Error:</h3>
                <p th:text="${error}"></p>
            </div>
        </div>
    </div>
</body>
</html>


  // Remove all spaces from the query for validation
        var normalizedQuery = highlightedQuery.replace(/\s+/g, '');

        // Validate DELETE or UPDATE without a proper WHERE clause or with `1=1`
        if ((/delete\s|update\s/i.test(highlightedQuery)) && 
            (!/where/i.test(highlightedQuery) || normalizedQuery.includes('where1=1'))) {
            alert("DELETE or UPDATE queries must include a valid WHERE clause. A WHERE clause with 1=1 is not allowed.");
            return;
        }
